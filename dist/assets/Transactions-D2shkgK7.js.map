{"version":3,"file":"Transactions-D2shkgK7.js","sources":["../../src/pages/admin/Transactions.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { \n  CheckCircle, \n  XCircle, \n  Clock, \n  Download, \n  Upload,\n  Eye,\n  Search,\n  Filter,\n  RefreshCw,\n  AlertTriangle\n} from 'lucide-react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { utils } from '@/lib/supabase';\nimport { Transaction, User } from '@/types';\nimport { useToast } from '@/components/ui/toaster';\n\nexport const Transactions = () => {\n  const { toast } = useToast();\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const [users, setUsers] = useState<User[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedTransaction, setSelectedTransaction] = useState<Transaction | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState<string>('all');\n  const [typeFilter, setTypeFilter] = useState<string>('all');\n\n  // Mock data for demonstration\n  useEffect(() => {\n    setTimeout(() => {\n      setUsers([\n        {\n          id: '1',\n          email: 'john@example.com',\n          full_name: 'John Doe',\n          role: 'client',\n          status: 'active',\n          total_invested: 1500,\n          total_profit: 250,\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString(),\n        },\n        {\n          id: '2',\n          email: 'jane@example.com',\n          full_name: 'Jane Smith',\n          role: 'client',\n          status: 'active',\n          total_invested: 800,\n          total_profit: 120,\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString(),\n        }\n      ]);\n\n      setTransactions([\n        {\n          id: '1',\n          user_id: '1',\n          type: 'deposit',\n          crypto_type: 'BTC',\n          amount: 0.002,\n          usd_value: 1000,\n          status: 'pending',\n          fee_amount: 0.00001,\n          created_at: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),\n          updated_at: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),\n        },\n        {\n          id: '2',\n          user_id: '2',\n          type: 'withdrawal',\n          crypto_type: 'ETH',\n          amount: 1.5,\n          usd_value: 600,\n          status: 'pending',\n          fee_amount: 0.005,\n          created_at: new Date(Date.now() - 1 * 60 * 60 * 1000).toISOString(),\n          updated_at: new Date(Date.now() - 1 * 60 * 60 * 1000).toISOString(),\n        },\n        {\n          id: '3',\n          user_id: '1',\n          type: 'deposit',\n          crypto_type: 'USDT',\n          amount: 500,\n          usd_value: 500,\n          status: 'approved',\n          fee_amount: 1,\n          created_at: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\n          updated_at: new Date(Date.now() - 12 * 60 * 60 * 1000).toISOString(),\n        },\n        {\n          id: '4',\n          user_id: '2',\n          type: 'withdrawal',\n          crypto_type: 'BTC',\n          amount: 0.001,\n          usd_value: 500,\n          status: 'rejected',\n          fee_amount: 0.00001,\n          created_at: new Date(Date.now() - 48 * 60 * 60 * 1000).toISOString(),\n          updated_at: new Date(Date.now() - 36 * 60 * 60 * 1000).toISOString(),\n        }\n      ]);\n\n      setLoading(false);\n    }, 1000);\n  }, []);\n\n  const handleApprove = (transactionId: string) => {\n    setTransactions(prev => \n      prev.map(t => \n        t.id === transactionId \n          ? { ...t, status: 'approved', updated_at: new Date().toISOString() }\n          : t\n      )\n    );\n    toast('Transaction approuvée !', 'success');\n    setSelectedTransaction(null);\n  };\n\n  const handleReject = (transactionId: string) => {\n    setTransactions(prev => \n      prev.map(t => \n        t.id === transactionId \n          ? { ...t, status: 'rejected', updated_at: new Date().toISOString() }\n          : t\n      )\n    );\n    toast('Transaction rejetée !', 'success');\n    setSelectedTransaction(null);\n  };\n\n  const getUserName = (userId: string) => {\n    const user = users.find(u => u.id === userId);\n    return user ? user.full_name : 'Utilisateur inconnu';\n  };\n\n  const getUserEmail = (userId: string) => {\n    const user = users.find(u => u.id === userId);\n    return user ? user.email : 'N/A';\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'approved':\n        return <CheckCircle className=\"w-4 h-4 text-green-500\" />;\n      case 'rejected':\n        return <XCircle className=\"w-4 h-4 text-red-500\" />;\n      case 'pending':\n        return <Clock className=\"w-4 h-4 text-yellow-500\" />;\n      default:\n        return <Clock className=\"w-4 h-4 text-gray-500\" />;\n    }\n  };\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'approved':\n        return 'Approuvé';\n      case 'rejected':\n        return 'Rejeté';\n      case 'pending':\n        return 'En attente';\n      default:\n        return 'Inconnu';\n    }\n  };\n\n  const getTypeIcon = (type: string) => {\n    return type === 'deposit' ? (\n      <Download className=\"w-4 h-4 text-green-600\" />\n    ) : (\n      <Upload className=\"w-4 h-4 text-orange-600\" />\n    );\n  };\n\n  const getTypeText = (type: string) => {\n    return type === 'deposit' ? 'Dépôt' : 'Retrait';\n  };\n\n  const filteredTransactions = transactions.filter(transaction => {\n    const matchesSearch = getUserName(transaction.user_id).toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         transaction.crypto_type.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesStatus = statusFilter === 'all' || transaction.status === statusFilter;\n    const matchesType = typeFilter === 'all' || transaction.type === typeFilter;\n    \n    return matchesSearch && matchesStatus && matchesType;\n  });\n\n  const pendingCount = transactions.filter(t => t.status === 'pending').length;\n  const approvedCount = transactions.filter(t => t.status === 'approved').length;\n  const rejectedCount = transactions.filter(t => t.status === 'rejected').length;\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-crypto-primary\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <h1 className=\"text-3xl font-bold\">Gestion des Transactions</h1>\n        <p className=\"text-muted-foreground\">\n          Validez les dépôts et retraits des utilisateurs\n        </p>\n      </motion.div>\n\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5, delay: 0.1 }}\n        >\n          <Card className=\"border-yellow-200 bg-yellow-50\">\n            <CardContent className=\"pt-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-yellow-700\">En attente</p>\n                  <p className=\"text-2xl font-bold text-yellow-800\">{pendingCount}</p>\n                </div>\n                <Clock className=\"w-8 h-8 text-yellow-600\" />\n              </div>\n            </CardContent>\n          </Card>\n        </motion.div>\n\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5, delay: 0.2 }}\n        >\n          <Card className=\"border-green-200 bg-green-50\">\n            <CardContent className=\"pt-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-green-700\">Approuvées</p>\n                  <p className=\"text-2xl font-bold text-green-800\">{approvedCount}</p>\n                </div>\n                <CheckCircle className=\"w-8 h-8 text-green-600\" />\n              </div>\n            </CardContent>\n          </Card>\n        </motion.div>\n\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5, delay: 0.3 }}\n        >\n          <Card className=\"border-red-200 bg-red-50\">\n            <CardContent className=\"pt-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-red-700\">Rejetées</p>\n                  <p className=\"text-2xl font-bold text-red-800\">{rejectedCount}</p>\n                </div>\n                <XCircle className=\"w-8 h-8 text-red-600\" />\n              </div>\n            </CardContent>\n          </Card>\n        </motion.div>\n      </div>\n\n      {/* Filters */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5, delay: 0.4 }}\n      >\n        <Card>\n          <CardContent className=\"pt-6\">\n            <div className=\"flex flex-col md:flex-row gap-4\">\n              <div className=\"flex-1\">\n                <div className=\"relative\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n                  <Input\n                    placeholder=\"Rechercher par utilisateur ou crypto...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"pl-10\"\n                  />\n                </div>\n              </div>\n              <div className=\"flex gap-2\">\n                <select\n                  value={statusFilter}\n                  onChange={(e) => setStatusFilter(e.target.value)}\n                  className=\"px-3 py-2 border rounded-md text-sm\"\n                >\n                  <option value=\"all\">Tous les statuts</option>\n                  <option value=\"pending\">En attente</option>\n                  <option value=\"approved\">Approuvé</option>\n                  <option value=\"rejected\">Rejeté</option>\n                </select>\n                <select\n                  value={typeFilter}\n                  onChange={(e) => setTypeFilter(e.target.value)}\n                  className=\"px-3 py-2 border rounded-md text-sm\"\n                >\n                  <option value=\"all\">Tous les types</option>\n                  <option value=\"deposit\">Dépôt</option>\n                  <option value=\"withdrawal\">Retrait</option>\n                </select>\n                <Button variant=\"outline\" size=\"sm\">\n                  <RefreshCw className=\"w-4 h-4\" />\n                </Button>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </motion.div>\n\n      {/* Transactions List */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5, delay: 0.5 }}\n      >\n        <Card>\n          <CardHeader>\n            <CardTitle>Transactions ({filteredTransactions.length})</CardTitle>\n            <CardDescription>\n              Liste des transactions en attente de validation\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            {filteredTransactions.length === 0 ? (\n              <div className=\"text-center py-8\">\n                <AlertTriangle className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n                <p className=\"text-muted-foreground\">Aucune transaction trouvée</p>\n              </div>\n            ) : (\n              <div className=\"space-y-4\">\n                {filteredTransactions.map((transaction) => (\n                  <div key={transaction.id} className=\"border rounded-lg p-4 hover:bg-gray-50 transition-colors\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-4\">\n                        <div className={`w-10 h-10 rounded-lg flex items-center justify-center ${\n                          transaction.type === 'deposit' \n                            ? 'bg-green-100 text-green-600' \n                            : 'bg-orange-100 text-orange-600'\n                        }`}>\n                          {getTypeIcon(transaction.type)}\n                        </div>\n                        <div>\n                          <p className=\"font-medium\">\n                            {getTypeText(transaction.type)} {transaction.crypto_type}\n                          </p>\n                          <p className=\"text-sm text-muted-foreground\">\n                            {getUserName(transaction.user_id)} • {getUserEmail(transaction.user_id)}\n                          </p>\n                          <p className=\"text-sm text-muted-foreground\">\n                            {utils.formatCryptoAmount(transaction.amount, transaction.crypto_type, transaction.usd_value)}\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"text-right\">\n                        <div className=\"flex items-center space-x-2 mb-2\">\n                          {getStatusIcon(transaction.status)}\n                          <span className={`text-sm font-medium ${\n                            transaction.status === 'approved' ? 'text-green-600' :\n                            transaction.status === 'rejected' ? 'text-red-600' : 'text-yellow-600'\n                          }`}>\n                            {getStatusText(transaction.status)}\n                          </span>\n                        </div>\n                        <p className=\"text-sm text-muted-foreground\">\n                          {utils.formatDate(transaction.created_at)}\n                        </p>\n                        {transaction.status === 'pending' && (\n                          <div className=\"flex space-x-2 mt-2\">\n                            <Button\n                              size=\"sm\"\n                              onClick={() => setSelectedTransaction(transaction)}\n                            >\n                              <Eye className=\"w-4 h-4 mr-1\" />\n                              Voir\n                            </Button>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </motion.div>\n\n      {/* Transaction Detail Modal */}\n      {selectedTransaction && (\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ duration: 0.3 }}\n          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\"\n          onClick={() => setSelectedTransaction(null)}\n        >\n          <Card className=\"w-full max-w-md\" onClick={(e) => e.stopPropagation()}>\n            <CardHeader>\n              <CardTitle className=\"flex items-center space-x-2\">\n                {getTypeIcon(selectedTransaction.type)}\n                <span>Détails de la transaction</span>\n              </CardTitle>\n              <CardDescription>\n                {getTypeText(selectedTransaction.type)} {selectedTransaction.crypto_type}\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm font-medium\">Utilisateur:</span>\n                  <span className=\"text-sm\">{getUserName(selectedTransaction.user_id)}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm font-medium\">Email:</span>\n                  <span className=\"text-sm\">{getUserEmail(selectedTransaction.user_id)}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm font-medium\">Montant:</span>\n                  <span className=\"text-sm font-medium\">\n                    {utils.formatCryptoAmount(selectedTransaction.amount, selectedTransaction.crypto_type, selectedTransaction.usd_value)}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm font-medium\">Frais:</span>\n                  <span className=\"text-sm\">\n                    {utils.formatCryptoAmount(selectedTransaction.fee_amount, selectedTransaction.crypto_type)}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm font-medium\">Date:</span>\n                  <span className=\"text-sm\">{utils.formatDate(selectedTransaction.created_at)}</span>\n                </div>\n              </div>\n\n              <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-3\">\n                <div className=\"flex items-center space-x-2\">\n                  <AlertTriangle className=\"w-4 h-4 text-yellow-600\" />\n                  <span className=\"text-sm font-medium text-yellow-800\">Action requise</span>\n                </div>\n                <p className=\"text-sm text-yellow-700 mt-1\">\n                  Cette transaction nécessite votre validation. Vérifiez les détails avant de prendre une décision.\n                </p>\n              </div>\n\n              <div className=\"flex space-x-2\">\n                <Button \n                  onClick={() => handleApprove(selectedTransaction.id)}\n                  className=\"flex-1 bg-green-600 hover:bg-green-700\"\n                >\n                  <CheckCircle className=\"w-4 h-4 mr-2\" />\n                  Approuver\n                </Button>\n                <Button \n                  variant=\"destructive\"\n                  onClick={() => handleReject(selectedTransaction.id)}\n                  className=\"flex-1\"\n                >\n                  <XCircle className=\"w-4 h-4 mr-2\" />\n                  Rejeter\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </motion.div>\n      )}\n    </div>\n  );\n}; "],"names":["Transactions","toast","useToast","transactions","setTransactions","useState","users","setUsers","loading","setLoading","selectedTransaction","setSelectedTransaction","searchTerm","setSearchTerm","statusFilter","setStatusFilter","typeFilter","setTypeFilter","useEffect","handleApprove","transactionId","prev","t","handleReject","getUserName","userId","user","u","getUserEmail","getStatusIcon","status","jsx","CheckCircle","XCircle","Clock","getStatusText","getTypeIcon","type","Download","Upload","getTypeText","filteredTransactions","transaction","matchesSearch","matchesStatus","matchesType","pendingCount","approvedCount","rejectedCount","jsxs","motion","Card","CardContent","Search","Input","e","Button","RefreshCw","CardHeader","CardTitle","CardDescription","AlertTriangle","utils","Eye"],"mappings":"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"}
{"version":3,"file":"Plans-DVzKtLt6.js","sources":["../../src/pages/client/Plans.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { \n  TrendingUp, \n  Clock, \n  Target, \n  CheckCircle,\n  Star,\n  DollarSign,\n  Calendar,\n  Users,\n  Zap\n} from 'lucide-react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { useAuthStore } from '@/store/auth';\nimport { utils } from '@/lib/supabase';\nimport { InvestmentPlan, UserInvestment } from '@/types';\nimport { useToast } from '@/components/ui/toaster';\n\nexport const Plans = () => {\n  const { user } = useAuthStore();\n  const { toast } = useToast();\n  const [plans, setPlans] = useState<InvestmentPlan[]>([]);\n  const [userInvestments, setUserInvestments] = useState<UserInvestment[]>([]);\n  const [selectedPlan, setSelectedPlan] = useState<InvestmentPlan | null>(null);\n  const [investmentAmount, setInvestmentAmount] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  // Mock data for demonstration\n  useEffect(() => {\n    setTimeout(() => {\n      setPlans([\n        {\n          id: '1',\n          name: 'Starter',\n          description: 'Parfait pour débuter votre parcours d\\'investissement',\n          min_amount: 50,\n          max_amount: 500,\n          profit_target: 15,\n          duration_days: 30,\n          features: [\n            'Investissement minimum: 50€',\n            'Profit cible: 15%',\n            'Durée: 30 jours',\n            'Support email',\n            'Rapports hebdomadaires'\n          ],\n          is_active: true,\n          created_at: new Date().toISOString(),\n        },\n        {\n          id: '2',\n          name: 'Pro',\n          description: 'Pour les investisseurs sérieux qui veulent maximiser leurs gains',\n          min_amount: 200,\n          max_amount: 2000,\n          profit_target: 25,\n          duration_days: 45,\n          features: [\n            'Investissement minimum: 200€',\n            'Profit cible: 25%',\n            'Durée: 45 jours',\n            'Support prioritaire',\n            'Analyses avancées',\n            'Rapports quotidiens',\n            'Stratégies personnalisées'\n          ],\n          is_active: true,\n          created_at: new Date().toISOString(),\n        },\n        {\n          id: '3',\n          name: 'Expert',\n          description: 'Performance maximale pour les investisseurs expérimentés',\n          min_amount: 500,\n          max_amount: 10000,\n          profit_target: 35,\n          duration_days: 60,\n          features: [\n            'Investissement minimum: 500€',\n            'Profit cible: 35%',\n            'Durée: 60 jours',\n            'Support dédié',\n            'Stratégies exclusives',\n            'Consultation personnalisée',\n            'Rapports en temps réel',\n            'Accès VIP aux événements'\n          ],\n          is_active: true,\n          created_at: new Date().toISOString(),\n        },\n      ]);\n\n      setUserInvestments([\n        {\n          id: '1',\n          user_id: user?.id || '',\n          plan_id: '2',\n          amount: 500,\n          profit_target: 125,\n          current_profit: 45,\n          status: 'active',\n          start_date: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000).toISOString(),\n          end_date: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),\n          created_at: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000).toISOString(),\n        },\n        {\n          id: '2',\n          user_id: user?.id || '',\n          plan_id: '1',\n          amount: 100,\n          profit_target: 15,\n          current_profit: 8,\n          status: 'completed',\n          start_date: new Date(Date.now() - 45 * 24 * 60 * 60 * 1000).toISOString(),\n          end_date: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000).toISOString(),\n          created_at: new Date(Date.now() - 45 * 24 * 60 * 60 * 1000).toISOString(),\n        }\n      ]);\n\n      setLoading(false);\n    }, 1000);\n  }, [user?.id]);\n\n  const handleInvest = () => {\n    if (!selectedPlan || !investmentAmount) {\n      toast('Veuillez sélectionner un plan et entrer un montant', 'error');\n      return;\n    }\n\n    const amount = parseFloat(investmentAmount);\n    if (amount < selectedPlan.min_amount || amount > selectedPlan.max_amount) {\n      toast(`Le montant doit être entre ${utils.formatEUR(selectedPlan.min_amount)} et ${utils.formatEUR(selectedPlan.max_amount)}`, 'error');\n      return;\n    }\n\n    if (amount > (user?.total_invested || 0)) {\n      toast('Solde insuffisant pour cet investissement', 'error');\n      return;\n    }\n\n    // Simulate investment creation\n    toast('Investissement créé avec succès !', 'success');\n    setInvestmentAmount('');\n    setSelectedPlan(null);\n  };\n\n  const getPlanIcon = (planName: string) => {\n    switch (planName.toLowerCase()) {\n      case 'starter':\n        return <Zap className=\"w-6 h-6\" />;\n      case 'pro':\n        return <TrendingUp className=\"w-6 h-6\" />;\n      case 'expert':\n        return <Star className=\"w-6 h-6\" />;\n      default:\n        return <Target className=\"w-6 h-6\" />;\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'active':\n        return 'text-green-600 bg-green-100';\n      case 'completed':\n        return 'text-blue-600 bg-blue-100';\n      case 'pending':\n        return 'text-yellow-600 bg-yellow-100';\n      default:\n        return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'active':\n        return 'Actif';\n      case 'completed':\n        return 'Terminé';\n      case 'pending':\n        return 'En attente';\n      default:\n        return 'Inconnu';\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-crypto-primary\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <h1 className=\"text-3xl font-bold\">Packs d'Investissement</h1>\n        <p className=\"text-muted-foreground\">\n          Choisissez le plan qui correspond à vos objectifs d'investissement\n        </p>\n      </motion.div>\n\n      {/* User Balance */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5, delay: 0.1 }}\n      >\n        <Card className=\"bg-gradient-to-r from-crypto-primary to-crypto-secondary text-white\">\n          <CardContent className=\"pt-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm opacity-90\">Solde disponible</p>\n                <p className=\"text-2xl font-bold\">{utils.formatEUR(user?.total_invested || 0)}</p>\n              </div>\n              <DollarSign className=\"w-8 h-8 opacity-80\" />\n            </div>\n          </CardContent>\n        </Card>\n      </motion.div>\n\n      {/* Investment Plans */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {plans.map((plan, index) => (\n          <motion.div\n            key={plan.id}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5, delay: index * 0.1 }}\n          >\n            <Card className={`relative h-full ${plan.name === 'Pro' ? 'ring-2 ring-crypto-primary' : ''}`}>\n              {plan.name === 'Pro' && (\n                <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2\">\n                  <span className=\"bg-crypto-primary text-white px-3 py-1 rounded-full text-sm font-medium\">\n                    Populaire\n                  </span>\n                </div>\n              )}\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  {getPlanIcon(plan.name)}\n                  <span>{plan.name}</span>\n                </CardTitle>\n                <CardDescription>{plan.description}</CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                {/* Plan Details */}\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm text-muted-foreground\">Profit cible</span>\n                    <span className=\"font-bold text-green-600\">{plan.profit_target}%</span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm text-muted-foreground\">Durée</span>\n                    <span className=\"font-medium\">{plan.duration_days} jours</span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm text-muted-foreground\">Min/Max</span>\n                    <span className=\"font-medium\">\n                      {utils.formatEUR(plan.min_amount)} - {utils.formatEUR(plan.max_amount)}\n                    </span>\n                  </div>\n                </div>\n\n                {/* Features */}\n                <div className=\"space-y-2\">\n                  <h4 className=\"font-medium text-sm\">Inclus :</h4>\n                  <ul className=\"space-y-1\">\n                    {plan.features.slice(0, 3).map((feature, idx) => (\n                      <li key={idx} className=\"flex items-center space-x-2 text-sm\">\n                        <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                        <span>{feature}</span>\n                      </li>\n                    ))}\n                    {plan.features.length > 3 && (\n                      <li className=\"text-sm text-muted-foreground\">\n                        +{plan.features.length - 3} autres avantages\n                      </li>\n                    )}\n                  </ul>\n                </div>\n\n                {/* Invest Button */}\n                <Button \n                  className=\"w-full\" \n                  onClick={() => setSelectedPlan(plan)}\n                >\n                  Investir maintenant\n                </Button>\n              </CardContent>\n            </Card>\n          </motion.div>\n        ))}\n      </div>\n\n      {/* Investment Modal */}\n      {selectedPlan && (\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\"\n          onClick={() => setSelectedPlan(null)}\n        >\n          <Card className=\"w-full max-w-md\" onClick={(e) => e.stopPropagation()}>\n            <CardHeader>\n              <CardTitle>Investir dans {selectedPlan.name}</CardTitle>\n              <CardDescription>\n                Entrez le montant que vous souhaitez investir\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div>\n                <label className=\"text-sm font-medium\">Montant d'investissement</label>\n                <Input\n                  type=\"number\"\n                  placeholder={`Min: ${utils.formatEUR(selectedPlan.min_amount)}`}\n                  value={investmentAmount}\n                  onChange={(e) => setInvestmentAmount(e.target.value)}\n                />\n                <p className=\"text-xs text-muted-foreground mt-1\">\n                  Montant entre {utils.formatEUR(selectedPlan.min_amount)} et {utils.formatEUR(selectedPlan.max_amount)}\n                </p>\n              </div>\n              \n              <div className=\"bg-gray-50 p-3 rounded-lg space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm\">Profit cible:</span>\n                  <span className=\"font-medium text-green-600\">{selectedPlan.profit_target}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm\">Durée:</span>\n                  <span className=\"font-medium\">{selectedPlan.duration_days} jours</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm\">Profit estimé:</span>\n                  <span className=\"font-medium\">\n                    {investmentAmount ? utils.formatEUR(parseFloat(investmentAmount) * selectedPlan.profit_target / 100) : '€0.00'}\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"flex space-x-2\">\n                <Button onClick={handleInvest} className=\"flex-1\">\n                  Confirmer l'investissement\n                </Button>\n                <Button \n                  variant=\"outline\" \n                  onClick={() => setSelectedPlan(null)}\n                >\n                  Annuler\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </motion.div>\n      )}\n\n      {/* Active Investments */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5, delay: 0.3 }}\n      >\n        <Card>\n          <CardHeader>\n            <CardTitle>Mes Investissements</CardTitle>\n            <CardDescription>\n              Suivez vos investissements actifs et leur progression\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            {userInvestments.length === 0 ? (\n              <div className=\"text-center py-8\">\n                <Target className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n                <p className=\"text-muted-foreground\">Aucun investissement actif</p>\n                <p className=\"text-sm text-muted-foreground\">\n                  Commencez par investir dans un de nos packs ci-dessus\n                </p>\n              </div>\n            ) : (\n              <div className=\"space-y-4\">\n                {userInvestments.map((investment) => {\n                  const plan = plans.find(p => p.id === investment.plan_id);\n                  const progress = (investment.current_profit / investment.profit_target) * 100;\n                  const daysLeft = Math.ceil((new Date(investment.end_date).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));\n                  \n                  return (\n                    <div key={investment.id} className=\"border rounded-lg p-4\">\n                      <div className=\"flex items-center justify-between mb-3\">\n                        <div>\n                          <h4 className=\"font-medium\">{plan?.name} Pack</h4>\n                          <p className=\"text-sm text-muted-foreground\">\n                            Investi le {utils.formatDate(investment.start_date)}\n                          </p>\n                        </div>\n                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(investment.status)}`}>\n                          {getStatusText(investment.status)}\n                        </span>\n                      </div>\n                      \n                      <div className=\"space-y-3\">\n                        <div className=\"flex justify-between text-sm\">\n                          <span>Montant investi:</span>\n                          <span className=\"font-medium\">{utils.formatEUR(investment.amount)}</span>\n                        </div>\n                        <div className=\"flex justify-between text-sm\">\n                          <span>Profit actuel:</span>\n                          <span className=\"font-medium text-green-600\">\n                            {utils.formatEUR(investment.current_profit)} / {utils.formatEUR(investment.profit_target)}\n                          </span>\n                        </div>\n                        \n                        {/* Progress Bar */}\n                        <div className=\"space-y-1\">\n                          <div className=\"flex justify-between text-xs\">\n                            <span>Progression</span>\n                            <span>{progress.toFixed(1)}%</span>\n                          </div>\n                          <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                            <div \n                              className=\"bg-green-500 h-2 rounded-full transition-all duration-300\"\n                              style={{ width: `${Math.min(progress, 100)}%` }}\n                            ></div>\n                          </div>\n                        </div>\n                        \n                        {investment.status === 'active' && (\n                          <div className=\"flex justify-between text-sm\">\n                            <span>Temps restant:</span>\n                            <span className=\"font-medium\">{daysLeft} jours</span>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </motion.div>\n    </div>\n  );\n}; "],"names":["Plans","user","useAuthStore","toast","useToast","plans","setPlans","useState","userInvestments","setUserInvestments","selectedPlan","setSelectedPlan","investmentAmount","setInvestmentAmount","loading","setLoading","useEffect","handleInvest","amount","utils","getPlanIcon","planName","jsx","Zap","TrendingUp","Star","Target","getStatusColor","status","getStatusText","jsxs","motion","Card","CardContent","DollarSign","plan","index","CardHeader","CardTitle","CardDescription","feature","idx","CheckCircle","Button","e","Input","investment","p","progress","daysLeft"],"mappings":"mVAqBO,MAAMA,EAAQ,IAAM,CACzB,KAAM,CAAE,KAAAC,CAAA,EAASC,EAAA,EACX,CAAE,MAAAC,CAAA,EAAUC,EAAA,EACZ,CAACC,EAAOC,CAAQ,EAAIC,EAAAA,SAA2B,CAAA,CAAE,EACjD,CAACC,EAAiBC,CAAkB,EAAIF,EAAAA,SAA2B,CAAA,CAAE,EACrE,CAACG,EAAcC,CAAe,EAAIJ,EAAAA,SAAgC,IAAI,EACtE,CAACK,EAAkBC,CAAmB,EAAIN,EAAAA,SAAS,EAAE,EACrD,CAACO,EAASC,CAAU,EAAIR,EAAAA,SAAS,EAAI,EAG3CS,EAAAA,UAAU,IAAM,CACd,WAAW,IAAM,CACfV,EAAS,CACP,CACE,GAAI,IACJ,KAAM,UACN,YAAa,uDACb,WAAY,GACZ,WAAY,IACZ,cAAe,GACf,cAAe,GACf,SAAU,CACR,8BACA,oBACA,kBACA,gBACA,wBAAA,EAEF,UAAW,GACX,WAAY,IAAI,KAAA,EAAO,YAAA,CAAY,EAErC,CACE,GAAI,IACJ,KAAM,MACN,YAAa,mEACb,WAAY,IACZ,WAAY,IACZ,cAAe,GACf,cAAe,GACf,SAAU,CACR,+BACA,oBACA,kBACA,sBACA,oBACA,sBACA,2BAAA,EAEF,UAAW,GACX,WAAY,IAAI,KAAA,EAAO,YAAA,CAAY,EAErC,CACE,GAAI,IACJ,KAAM,SACN,YAAa,2DACb,WAAY,IACZ,WAAY,IACZ,cAAe,GACf,cAAe,GACf,SAAU,CACR,+BACA,oBACA,kBACA,gBACA,wBACA,6BACA,yBACA,0BAAA,EAEF,UAAW,GACX,WAAY,IAAI,KAAA,EAAO,YAAA,CAAY,CACrC,CACD,EAEDG,EAAmB,CACjB,CACE,GAAI,IACJ,SAASR,GAAA,YAAAA,EAAM,KAAM,GACrB,QAAS,IACT,OAAQ,IACR,cAAe,IACf,eAAgB,GAChB,OAAQ,SACR,WAAY,IAAI,KAAK,KAAK,IAAA,EAAQ,GAAK,GAAK,GAAK,GAAK,GAAI,EAAE,YAAA,EAC5D,SAAU,IAAI,KAAK,KAAK,IAAA,EAAQ,GAAK,GAAK,GAAK,GAAK,GAAI,EAAE,YAAA,EAC1D,WAAY,IAAI,KAAK,KAAK,IAAA,EAAQ,GAAK,GAAK,GAAK,GAAK,GAAI,EAAE,YAAA,CAAY,EAE1E,CACE,GAAI,IACJ,SAASA,GAAA,YAAAA,EAAM,KAAM,GACrB,QAAS,IACT,OAAQ,IACR,cAAe,GACf,eAAgB,EAChB,OAAQ,YACR,WAAY,IAAI,KAAK,KAAK,IAAA,EAAQ,GAAK,GAAK,GAAK,GAAK,GAAI,EAAE,YAAA,EAC5D,SAAU,IAAI,KAAK,KAAK,IAAA,EAAQ,GAAK,GAAK,GAAK,GAAK,GAAI,EAAE,YAAA,EAC1D,WAAY,IAAI,KAAK,KAAK,IAAA,EAAQ,GAAK,GAAK,GAAK,GAAK,GAAI,EAAE,YAAA,CAAY,CAC1E,CACD,EAEDc,EAAW,EAAK,CAClB,EAAG,GAAI,CACT,EAAG,CAACd,GAAA,YAAAA,EAAM,EAAE,CAAC,EAEb,MAAMgB,EAAe,IAAM,CACzB,GAAI,CAACP,GAAgB,CAACE,EAAkB,CACtCT,EAAM,qDAAsD,OAAO,EACnE,MACF,CAEA,MAAMe,EAAS,WAAWN,CAAgB,EAC1C,GAAIM,EAASR,EAAa,YAAcQ,EAASR,EAAa,WAAY,CACxEP,EAAM,8BAA8BgB,EAAM,UAAUT,EAAa,UAAU,CAAC,OAAOS,EAAM,UAAUT,EAAa,UAAU,CAAC,GAAI,OAAO,EACtI,MACF,CAEA,GAAIQ,IAAUjB,GAAA,YAAAA,EAAM,iBAAkB,GAAI,CACxCE,EAAM,4CAA6C,OAAO,EAC1D,MACF,CAGAA,EAAM,oCAAqC,SAAS,EACpDU,EAAoB,EAAE,EACtBF,EAAgB,IAAI,CACtB,EAEMS,EAAeC,GAAqB,CACxC,OAAQA,EAAS,cAAY,CAC3B,IAAK,UACH,OAAOC,EAAAA,IAACC,EAAA,CAAI,UAAU,SAAA,CAAU,EAClC,IAAK,MACH,OAAOD,EAAAA,IAACE,EAAA,CAAW,UAAU,SAAA,CAAU,EACzC,IAAK,SACH,OAAOF,EAAAA,IAACG,EAAA,CAAK,UAAU,SAAA,CAAU,EACnC,QACE,OAAOH,EAAAA,IAACI,EAAA,CAAO,UAAU,SAAA,CAAU,CAAA,CAEzC,EAEMC,EAAkBC,GAAmB,CACzC,OAAQA,EAAA,CACN,IAAK,SACH,MAAO,8BACT,IAAK,YACH,MAAO,4BACT,IAAK,UACH,MAAO,gCACT,QACE,MAAO,2BAAA,CAEb,EAEMC,EAAiBD,GAAmB,CACxC,OAAQA,EAAA,CACN,IAAK,SACH,MAAO,QACT,IAAK,YACH,MAAO,UACT,IAAK,UACH,MAAO,aACT,QACE,MAAO,SAAA,CAEb,EAEA,OAAId,EAEAQ,MAAC,OAAI,UAAU,wCACb,eAAC,MAAA,CAAI,UAAU,uEAAuE,CAAA,CACxF,EAKFQ,EAAAA,KAAC,MAAA,CAAI,UAAU,YAEb,SAAA,CAAAA,EAAAA,KAACC,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAA,EAC1B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAA,EAC1B,WAAY,CAAE,SAAU,EAAA,EAExB,SAAA,CAAAT,EAAAA,IAAC,KAAA,CAAG,UAAU,qBAAqB,SAAA,yBAAsB,EACzDA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,oEAAA,CAErC,CAAA,CAAA,CAAA,EAIFA,EAAAA,IAACS,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAA,EAC1B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAA,EAC1B,WAAY,CAAE,SAAU,GAAK,MAAO,EAAA,EAEpC,SAAAT,EAAAA,IAACU,EAAA,CAAK,UAAU,sEACd,SAAAV,EAAAA,IAACW,EAAA,CAAY,UAAU,OACrB,SAAAH,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAR,EAAAA,IAAC,IAAA,CAAE,UAAU,qBAAqB,SAAA,mBAAgB,EAClDA,EAAAA,IAAC,KAAE,UAAU,qBAAsB,WAAM,WAAUrB,GAAA,YAAAA,EAAM,iBAAkB,CAAC,CAAA,CAAE,CAAA,EAChF,EACAqB,EAAAA,IAACY,EAAA,CAAW,UAAU,oBAAA,CAAqB,CAAA,CAAA,CAC7C,EACF,CAAA,CACF,CAAA,CAAA,EAIFZ,EAAAA,IAAC,OAAI,UAAU,uDACZ,WAAM,IAAI,CAACa,EAAMC,IAChBd,EAAAA,IAACS,EAAO,IAAP,CAEC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAA,EAC1B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAA,EAC1B,WAAY,CAAE,SAAU,GAAK,MAAOK,EAAQ,EAAA,EAE5C,SAAAN,EAAAA,KAACE,GAAK,UAAW,mBAAmBG,EAAK,OAAS,MAAQ,6BAA+B,EAAE,GACxF,SAAA,CAAAA,EAAK,OAAS,OACbb,EAAAA,IAAC,MAAA,CAAI,UAAU,sDACb,SAAAA,EAAAA,IAAC,OAAA,CAAK,UAAU,0EAA0E,SAAA,WAAA,CAE1F,EACF,SAEDe,EAAA,CACC,SAAA,CAAAP,EAAAA,KAACQ,EAAA,CAAU,UAAU,8BAClB,SAAA,CAAAlB,EAAYe,EAAK,IAAI,EACtBb,EAAAA,IAAC,OAAA,CAAM,SAAAa,EAAK,IAAA,CAAK,CAAA,EACnB,EACAb,EAAAA,IAACiB,EAAA,CAAiB,SAAAJ,EAAK,WAAA,CAAY,CAAA,EACrC,EACAL,EAAAA,KAACG,EAAA,CAAY,UAAU,YAErB,SAAA,CAAAH,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAR,EAAAA,IAAC,OAAA,CAAK,UAAU,gCAAgC,SAAA,eAAY,EAC5DQ,EAAAA,KAAC,OAAA,CAAK,UAAU,2BAA4B,SAAA,CAAAK,EAAK,cAAc,GAAA,CAAA,CAAC,CAAA,EAClE,EACAL,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAR,EAAAA,IAAC,OAAA,CAAK,UAAU,gCAAgC,SAAA,QAAK,EACrDQ,EAAAA,KAAC,OAAA,CAAK,UAAU,cAAe,SAAA,CAAAK,EAAK,cAAc,QAAA,CAAA,CAAM,CAAA,EAC1D,EACAL,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAR,EAAAA,IAAC,OAAA,CAAK,UAAU,gCAAgC,SAAA,UAAO,EACvDQ,EAAAA,KAAC,OAAA,CAAK,UAAU,cACb,SAAA,CAAAX,EAAM,UAAUgB,EAAK,UAAU,EAAE,MAAIhB,EAAM,UAAUgB,EAAK,UAAU,CAAA,CAAA,CACvE,CAAA,CAAA,CACF,CAAA,EACF,EAGAL,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAR,EAAAA,IAAC,KAAA,CAAG,UAAU,sBAAsB,SAAA,WAAQ,EAC5CQ,EAAAA,KAAC,KAAA,CAAG,UAAU,YACX,SAAA,CAAAK,EAAK,SAAS,MAAM,EAAG,CAAC,EAAE,IAAI,CAACK,EAASC,IACvCX,EAAAA,KAAC,KAAA,CAAa,UAAU,sCACtB,SAAA,CAAAR,EAAAA,IAACoB,EAAA,CAAY,UAAU,wBAAA,CAAyB,EAChDpB,EAAAA,IAAC,QAAM,SAAAkB,CAAA,CAAQ,CAAA,CAAA,EAFRC,CAGT,CACD,EACAN,EAAK,SAAS,OAAS,GACtBL,EAAAA,KAAC,KAAA,CAAG,UAAU,gCAAgC,SAAA,CAAA,IAC1CK,EAAK,SAAS,OAAS,EAAE,mBAAA,CAAA,CAC7B,CAAA,CAAA,CAEJ,CAAA,EACF,EAGAb,EAAAA,IAACqB,EAAA,CACC,UAAU,SACV,QAAS,IAAMhC,EAAgBwB,CAAI,EACpC,SAAA,qBAAA,CAAA,CAED,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EAjEKA,EAAK,EAAA,CAmEb,EACH,EAGCzB,GACCY,EAAAA,IAACS,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAA,EAC1B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAA,EAC1B,WAAY,CAAE,SAAU,EAAA,EACxB,UAAU,iFACV,QAAS,IAAMpB,EAAgB,IAAI,EAEnC,SAAAmB,EAAAA,KAACE,GAAK,UAAU,kBAAkB,QAAUY,GAAMA,EAAE,gBAAA,EAClD,SAAA,CAAAd,OAACO,EAAA,CACC,SAAA,CAAAP,OAACQ,EAAA,CAAU,SAAA,CAAA,iBAAe5B,EAAa,IAAA,EAAK,EAC5CY,EAAAA,IAACiB,GAAgB,SAAA,+CAAA,CAEjB,CAAA,EACF,EACAT,EAAAA,KAACG,EAAA,CAAY,UAAU,YACrB,SAAA,CAAAH,OAAC,MAAA,CACC,SAAA,CAAAR,EAAAA,IAAC,QAAA,CAAM,UAAU,sBAAsB,SAAA,2BAAwB,EAC/DA,EAAAA,IAACuB,EAAA,CACC,KAAK,SACL,YAAa,QAAQ1B,EAAM,UAAUT,EAAa,UAAU,CAAC,GAC7D,MAAOE,EACP,SAAWgC,GAAM/B,EAAoB+B,EAAE,OAAO,KAAK,CAAA,CAAA,EAErDd,EAAAA,KAAC,IAAA,CAAE,UAAU,qCAAqC,SAAA,CAAA,iBACjCX,EAAM,UAAUT,EAAa,UAAU,EAAE,OAAKS,EAAM,UAAUT,EAAa,UAAU,CAAA,CAAA,CACtG,CAAA,EACF,EAEAoB,EAAAA,KAAC,MAAA,CAAI,UAAU,sCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAR,EAAAA,IAAC,OAAA,CAAK,UAAU,UAAU,SAAA,gBAAa,EACvCQ,EAAAA,KAAC,OAAA,CAAK,UAAU,6BAA8B,SAAA,CAAApB,EAAa,cAAc,GAAA,CAAA,CAAC,CAAA,EAC5E,EACAoB,EAAAA,KAAC,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAR,EAAAA,IAAC,OAAA,CAAK,UAAU,UAAU,SAAA,SAAM,EAChCQ,EAAAA,KAAC,OAAA,CAAK,UAAU,cAAe,SAAA,CAAApB,EAAa,cAAc,QAAA,CAAA,CAAM,CAAA,EAClE,EACAoB,EAAAA,KAAC,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAR,EAAAA,IAAC,OAAA,CAAK,UAAU,UAAU,SAAA,iBAAc,EACxCA,EAAAA,IAAC,OAAA,CAAK,UAAU,cACb,WAAmBH,EAAM,UAAU,WAAWP,CAAgB,EAAIF,EAAa,cAAgB,GAAG,EAAI,OAAA,CACzG,CAAA,CAAA,CACF,CAAA,EACF,EAEAoB,EAAAA,KAAC,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAR,MAACqB,EAAA,CAAO,QAAS1B,EAAc,UAAU,SAAS,SAAA,6BAElD,EACAK,EAAAA,IAACqB,EAAA,CACC,QAAQ,UACR,QAAS,IAAMhC,EAAgB,IAAI,EACpC,SAAA,SAAA,CAAA,CAED,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EAKJW,EAAAA,IAACS,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAA,EAC1B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAA,EAC1B,WAAY,CAAE,SAAU,GAAK,MAAO,EAAA,EAEpC,gBAACC,EAAA,CACC,SAAA,CAAAF,OAACO,EAAA,CACC,SAAA,CAAAf,EAAAA,IAACgB,GAAU,SAAA,qBAAA,CAAmB,EAC9BhB,EAAAA,IAACiB,GAAgB,SAAA,uDAAA,CAEjB,CAAA,EACF,EACAjB,EAAAA,IAACW,GACE,SAAAzB,EAAgB,SAAW,EAC1BsB,EAAAA,KAAC,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAR,EAAAA,IAACI,EAAA,CAAO,UAAU,8CAAA,CAA+C,EACjEJ,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,6BAA0B,EAC/DA,EAAAA,IAAC,IAAA,CAAE,UAAU,gCAAgC,SAAA,uDAAA,CAE7C,CAAA,CAAA,CACF,QAEC,MAAA,CAAI,UAAU,YACZ,SAAAd,EAAgB,IAAKsC,GAAe,CACnC,MAAMX,EAAO9B,EAAM,QAAU0C,EAAE,KAAOD,EAAW,OAAO,EAClDE,EAAYF,EAAW,eAAiBA,EAAW,cAAiB,IACpEG,EAAW,KAAK,MAAM,IAAI,KAAKH,EAAW,QAAQ,EAAE,QAAA,EAAY,IAAI,OAAO,QAAA,IAAc,IAAO,GAAK,GAAK,GAAG,EAEnH,OACEhB,EAAAA,KAAC,MAAA,CAAwB,UAAU,wBACjC,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,cAAe,SAAA,CAAAK,GAAA,YAAAA,EAAM,KAAK,OAAA,EAAK,EAC7CL,EAAAA,KAAC,IAAA,CAAE,UAAU,gCAAgC,SAAA,CAAA,cAC/BX,EAAM,WAAW2B,EAAW,UAAU,CAAA,CAAA,CACpD,CAAA,EACF,EACAxB,EAAAA,IAAC,OAAA,CAAK,UAAW,8CAA8CK,EAAemB,EAAW,MAAM,CAAC,GAC7F,SAAAjB,EAAciB,EAAW,MAAM,CAAA,CAClC,CAAA,EACF,EAEAhB,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAR,EAAAA,IAAC,QAAK,SAAA,kBAAA,CAAgB,EACtBA,MAAC,QAAK,UAAU,cAAe,WAAM,UAAUwB,EAAW,MAAM,CAAA,CAAE,CAAA,EACpE,EACAhB,EAAAA,KAAC,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAR,EAAAA,IAAC,QAAK,SAAA,gBAAA,CAAc,EACpBQ,EAAAA,KAAC,OAAA,CAAK,UAAU,6BACb,SAAA,CAAAX,EAAM,UAAU2B,EAAW,cAAc,EAAE,MAAI3B,EAAM,UAAU2B,EAAW,aAAa,CAAA,CAAA,CAC1F,CAAA,EACF,EAGAhB,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAR,EAAAA,IAAC,QAAK,SAAA,aAAA,CAAW,SAChB,OAAA,CAAM,SAAA,CAAA0B,EAAS,QAAQ,CAAC,EAAE,GAAA,CAAA,CAAC,CAAA,EAC9B,EACA1B,EAAAA,IAAC,MAAA,CAAI,UAAU,sCACb,SAAAA,EAAAA,IAAC,MAAA,CACC,UAAU,4DACV,MAAO,CAAE,MAAO,GAAG,KAAK,IAAI0B,EAAU,GAAG,CAAC,GAAA,CAAI,CAAA,CAC/C,CACH,CAAA,EACF,EAECF,EAAW,SAAW,UACrBhB,EAAAA,KAAC,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAR,EAAAA,IAAC,QAAK,SAAA,gBAAA,CAAc,EACpBQ,EAAAA,KAAC,OAAA,CAAK,UAAU,cAAe,SAAA,CAAAmB,EAAS,QAAA,CAAA,CAAM,CAAA,CAAA,CAChD,CAAA,CAAA,CAEJ,CAAA,CAAA,EA7CQH,EAAW,EA8CrB,CAEJ,CAAC,EACH,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,CACF,EACF,CAEJ"}
{"version":3,"file":"Notifications-CgL0y1fw.js","sources":["../../node_modules/lucide-react/dist/esm/icons/check.js","../../src/pages/client/Notifications.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Check = createLucideIcon(\"Check\", [[\"path\", { d: \"M20 6 9 17l-5-5\", key: \"1gmf2c\" }]]);\n\nexport { Check as default };\n//# sourceMappingURL=check.js.map\n","import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { \n  Bell, \n  CheckCircle, \n  AlertTriangle, \n  Info, \n  XCircle,\n  Trash2,\n  Check\n} from 'lucide-react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { useAuthStore } from '@/store/auth';\nimport { utils } from '@/lib/supabase';\nimport { Notification } from '@/types';\n\nexport const Notifications = () => {\n  const { user } = useAuthStore();\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  // Mock data\n  useEffect(() => {\n    setTimeout(() => {\n      setNotifications([\n        {\n          id: '1',\n          user_id: user?.id || '',\n          title: 'Dépôt approuvé',\n          message: 'Votre dépôt de 0.001 BTC a été approuvé et ajouté à votre solde.',\n          type: 'success',\n          is_read: false,\n          created_at: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),\n        },\n        {\n          id: '2',\n          user_id: user?.id || '',\n          title: 'Investissement actif',\n          message: 'Votre investissement Pro Pack de 500€ est maintenant actif.',\n          type: 'info',\n          is_read: true,\n          created_at: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\n        },\n        {\n          id: '3',\n          user_id: user?.id || '',\n          title: 'Maintenance prévue',\n          message: 'Une maintenance est prévue le 15 décembre de 2h à 4h du matin.',\n          type: 'warning',\n          is_read: false,\n          created_at: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),\n        }\n      ]);\n      setLoading(false);\n    }, 1000);\n  }, [user?.id]);\n\n  const markAsRead = (notificationId: string) => {\n    setNotifications(prev => \n      prev.map(n => \n        n.id === notificationId \n          ? { ...n, is_read: true }\n          : n\n      )\n    );\n  };\n\n  const markAllAsRead = () => {\n    setNotifications(prev => \n      prev.map(n => ({ ...n, is_read: true }))\n    );\n  };\n\n  const deleteNotification = (notificationId: string) => {\n    setNotifications(prev => prev.filter(n => n.id !== notificationId));\n  };\n\n  const getTypeIcon = (type: string) => {\n    switch (type) {\n      case 'success':\n        return <CheckCircle className=\"w-5 h-5 text-green-600\" />;\n      case 'warning':\n        return <AlertTriangle className=\"w-5 h-5 text-yellow-600\" />;\n      case 'error':\n        return <XCircle className=\"w-5 h-5 text-red-600\" />;\n      default:\n        return <Info className=\"w-5 h-5 text-blue-600\" />;\n    }\n  };\n\n  const getTypeColor = (type: string) => {\n    switch (type) {\n      case 'success':\n        return 'border-green-200 bg-green-50';\n      case 'warning':\n        return 'border-yellow-200 bg-yellow-50';\n      case 'error':\n        return 'border-red-200 bg-red-50';\n      default:\n        return 'border-blue-200 bg-blue-50';\n    }\n  };\n\n  const unreadCount = notifications.filter(n => !n.is_read).length;\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-crypto-primary\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-3xl font-bold\">Notifications</h1>\n            <p className=\"text-muted-foreground\">\n              Restez informé de vos activités\n            </p>\n          </div>\n          {unreadCount > 0 && (\n            <Button onClick={markAllAsRead} variant=\"outline\">\n              <Check className=\"w-4 h-4 mr-2\" />\n              Tout marquer comme lu\n            </Button>\n          )}\n        </div>\n      </motion.div>\n\n      {/* Stats */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5, delay: 0.1 }}\n      >\n        <Card>\n          <CardContent className=\"pt-6\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"w-12 h-12 bg-crypto-primary rounded-full flex items-center justify-center\">\n                  <Bell className=\"w-6 h-6 text-white\" />\n                </div>\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Notifications non lues</p>\n                  <p className=\"text-2xl font-bold\">{unreadCount}</p>\n                </div>\n              </div>\n              <div className=\"text-right\">\n                <p className=\"text-sm text-muted-foreground\">Total</p>\n                <p className=\"text-2xl font-bold\">{notifications.length}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </motion.div>\n\n      {/* Notifications List */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5, delay: 0.2 }}\n      >\n        <Card>\n          <CardHeader>\n            <CardTitle>Notifications ({notifications.length})</CardTitle>\n            <CardDescription>\n              Vos dernières notifications\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            {notifications.length === 0 ? (\n              <div className=\"text-center py-8\">\n                <Bell className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n                <p className=\"text-muted-foreground\">Aucune notification</p>\n              </div>\n            ) : (\n              <div className=\"space-y-4\">\n                {notifications.map((notification) => (\n                  <div \n                    key={notification.id} \n                    className={`p-4 border rounded-lg ${getTypeColor(notification.type)} ${\n                      !notification.is_read ? 'ring-2 ring-crypto-primary' : ''\n                    }`}\n                  >\n                    <div className=\"flex items-start justify-between\">\n                      <div className=\"flex items-start space-x-3\">\n                        {getTypeIcon(notification.type)}\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center space-x-2\">\n                            <h4 className=\"font-medium\">{notification.title}</h4>\n                            {!notification.is_read && (\n                              <span className=\"w-2 h-2 bg-crypto-primary rounded-full\"></span>\n                            )}\n                          </div>\n                          <p className=\"text-sm text-muted-foreground mt-1\">\n                            {notification.message}\n                          </p>\n                          <p className=\"text-xs text-muted-foreground mt-2\">\n                            {utils.formatDate(notification.created_at)}\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"flex space-x-2\">\n                        {!notification.is_read && (\n                          <Button\n                            size=\"sm\"\n                            variant=\"outline\"\n                            onClick={() => markAsRead(notification.id)}\n                          >\n                            <Check className=\"w-4 h-4\" />\n                          </Button>\n                        )}\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          onClick={() => deleteNotification(notification.id)}\n                        >\n                          <Trash2 className=\"w-4 h-4\" />\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </motion.div>\n    </div>\n  );\n}; "],"names":["Check","createLucideIcon","Notifications","user","useAuthStore","notifications","setNotifications","useState","loading","setLoading","useEffect","markAsRead","notificationId","prev","n","markAllAsRead","deleteNotification","getTypeIcon","type","jsx","CheckCircle","AlertTriangle","XCircle","Info","getTypeColor","unreadCount","jsxs","motion","Button","Card","CardContent","Bell","CardHeader","CardTitle","CardDescription","notification","Trash2"],"mappings":"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","x_google_ignoreList":[0]}
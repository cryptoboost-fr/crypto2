{"version":3,"file":"InvestmentPlans-BBDpGye3.js","sources":["../../src/pages/admin/InvestmentPlans.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { \n  Plus, \n  Edit, \n  Trash2, \n  Eye,\n  CheckCircle,\n  XCircle,\n  Search,\n  Filter\n} from 'lucide-react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { utils } from '@/lib/supabase';\nimport { InvestmentPlan } from '@/types';\n\nexport const InvestmentPlans = () => {\n  const [plans, setPlans] = useState<InvestmentPlan[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [editingPlan, setEditingPlan] = useState<InvestmentPlan | null>(null);\n\n  // Mock data\n  useEffect(() => {\n    setTimeout(() => {\n      setPlans([\n        {\n          id: '1',\n          name: 'Starter',\n          description: 'Plan parfait pour débuter dans le trading automatisé',\n          min_amount: 50,\n          max_amount: 199.99,\n          profit_target: 15,\n          duration_days: 30,\n          features: ['Investissement minimum: 50€', 'Profit cible: 15%', 'Durée: 30 jours', 'Support email'],\n          is_active: true,\n          created_at: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),\n        },\n        {\n          id: '2',\n          name: 'Pro',\n          description: 'Plan pour les investisseurs sérieux avec des performances optimisées',\n          min_amount: 200,\n          max_amount: 499.99,\n          profit_target: 25,\n          duration_days: 45,\n          features: ['Investissement minimum: 200€', 'Profit cible: 25%', 'Durée: 45 jours', 'Support prioritaire', 'Analyses avancées'],\n          is_active: true,\n          created_at: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000).toISOString(),\n        },\n        {\n          id: '3',\n          name: 'Expert',\n          description: 'Plan premium avec les meilleures stratégies et support dédié',\n          min_amount: 500,\n          max_amount: undefined,\n          profit_target: 35,\n          duration_days: 60,\n          features: ['Investissement minimum: 500€', 'Profit cible: 35%', 'Durée: 60 jours', 'Support dédié', 'Stratégies exclusives', 'Consultation personnalisée'],\n          is_active: true,\n          created_at: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),\n        }\n      ]);\n      setLoading(false);\n    }, 1000);\n  }, []);\n\n  const filteredPlans = plans.filter(plan =>\n    plan.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    plan.description.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const handleToggleStatus = (planId: string) => {\n    setPlans(prev => \n      prev.map(plan => \n        plan.id === planId \n          ? { ...plan, is_active: !plan.is_active }\n          : plan\n      )\n    );\n  };\n\n  const handleDeletePlan = (planId: string) => {\n    setPlans(prev => prev.filter(plan => plan.id !== planId));\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-crypto-primary\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-3xl font-bold\">Gestion des Plans</h1>\n            <p className=\"text-muted-foreground\">\n              Gérez les plans d'investissement de la plateforme\n            </p>\n          </div>\n          <Button onClick={() => setShowAddModal(true)}>\n            <Plus className=\"w-4 h-4 mr-2\" />\n            Nouveau Plan\n          </Button>\n        </div>\n      </motion.div>\n\n      {/* Stats */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5, delay: 0.1 }}\n      >\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <div className=\"text-2xl font-bold\">{plans.length}</div>\n              <p className=\"text-xs text-muted-foreground\">Total Plans</p>\n            </CardContent>\n          </Card>\n          <Card>\n            <CardContent className=\"pt-6\">\n              <div className=\"text-2xl font-bold\">{plans.filter(p => p.is_active).length}</div>\n              <p className=\"text-xs text-muted-foreground\">Plans Actifs</p>\n            </CardContent>\n          </Card>\n          <Card>\n            <CardContent className=\"pt-6\">\n              <div className=\"text-2xl font-bold\">{plans.filter(p => !p.is_active).length}</div>\n              <p className=\"text-xs text-muted-foreground\">Plans Inactifs</p>\n            </CardContent>\n          </Card>\n          <Card>\n            <CardContent className=\"pt-6\">\n              <div className=\"text-2xl font-bold\">{utils.formatEUR(plans.reduce((sum, p) => sum + p.min_amount, 0))}</div>\n              <p className=\"text-xs text-muted-foreground\">Capital Minimum</p>\n            </CardContent>\n          </Card>\n        </div>\n      </motion.div>\n\n      {/* Filters */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5, delay: 0.2 }}\n      >\n        <Card>\n          <CardContent className=\"pt-6\">\n            <div className=\"flex flex-col md:flex-row gap-4\">\n              <div className=\"flex-1\">\n                <div className=\"relative\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n                  <Input\n                    placeholder=\"Rechercher un plan...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"pl-10\"\n                  />\n                </div>\n              </div>\n              <div className=\"flex gap-2\">\n                <Button variant=\"outline\" size=\"sm\">\n                  <Filter className=\"w-4 h-4 mr-2\" />\n                  Filtrer\n                </Button>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </motion.div>\n\n      {/* Plans List */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5, delay: 0.3 }}\n      >\n        <Card>\n          <CardHeader>\n            <CardTitle>Plans d'Investissement ({filteredPlans.length})</CardTitle>\n            <CardDescription>\n              Liste des plans disponibles\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {filteredPlans.map((plan) => (\n                <div key={plan.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"w-12 h-12 bg-crypto-primary rounded-lg flex items-center justify-center\">\n                      <span className=\"text-white font-bold text-lg\">{plan.name.charAt(0)}</span>\n                    </div>\n                    <div>\n                      <div className=\"flex items-center space-x-2\">\n                        <h4 className=\"font-medium\">{plan.name}</h4>\n                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                          plan.is_active \n                            ? 'text-green-600 bg-green-100' \n                            : 'text-red-600 bg-red-100'\n                        }`}>\n                          {plan.is_active ? 'Actif' : 'Inactif'}\n                        </span>\n                      </div>\n                      <p className=\"text-sm text-muted-foreground\">{plan.description}</p>\n                      <div className=\"flex items-center space-x-4 mt-2 text-xs text-muted-foreground\">\n                        <span>Min: {utils.formatEUR(plan.min_amount)}</span>\n                        {plan.max_amount && <span>Max: {utils.formatEUR(plan.max_amount)}</span>}\n                        <span>Profit: {plan.profit_target}%</span>\n                        <span>Durée: {plan.duration_days} jours</span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      onClick={() => setEditingPlan(plan)}\n                    >\n                      <Edit className=\"w-4 h-4\" />\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      onClick={() => handleToggleStatus(plan.id)}\n                    >\n                      {plan.is_active ? (\n                        <XCircle className=\"w-4 h-4 text-red-500\" />\n                      ) : (\n                        <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      )}\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      onClick={() => handleDeletePlan(plan.id)}\n                    >\n                      <Trash2 className=\"w-4 h-4 text-red-500\" />\n                    </Button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      </motion.div>\n    </div>\n  );\n}; "],"names":["InvestmentPlans","plans","setPlans","useState","loading","setLoading","searchTerm","setSearchTerm","showAddModal","setShowAddModal","editingPlan","setEditingPlan","useEffect","filteredPlans","plan","handleToggleStatus","planId","prev","handleDeletePlan","jsx","jsxs","motion","Button","Plus","Card","CardContent","p","utils","sum","Search","Input","e","Filter","CardHeader","CardTitle","CardDescription","Edit","XCircle","CheckCircle","Trash2"],"mappings":"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"}